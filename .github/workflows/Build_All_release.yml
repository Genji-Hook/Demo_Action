name: Build_All_release

on:
  workflow_dispatch:
    inputs:
      make_release:
        description: "构建完成后发布 Release？"
        required: true
        type: boolean
        default: true
      keep_original_settings:
        description: "保持原内核名称及构建时间"
        required: false
        type: boolean
        default: true
      custom_kernel_suffix:
        description: "自定义内核后缀（取消'保持原内核名称及构建时间'后生效)"
        required: false
        type: string
        default: ''
      custom_kernel_time:
        description: "自定义构建时间（取消'保持原内核名称及构建时间'后生效)"
        required: false
        type: string
        default: ''
      enable_feature_z:
        description: "添加风驰驱动"
        required: false
        type: boolean
        default: true
      enable_feature_a:
        description: "开启SerialID校验"
        required: false
        type: boolean
        default: true
      enable_feature_c:
        description: "开启BBG防格机"
        required: false
        type: boolean
        default: true
      enable_feature_b:
        description: "选择网络调度"
        required: false
        type: choice
        options: ['FQ_CODEL','BBR']
        default: 'FQ_CODEL'

permissions:
  contents: write

concurrency:
  group: release-${{ github.ref }}-${{ github.run_id }}
  cancel-in-progress: false

jobs:
  build-matrix:
    name: Build (${{ matrix.device }})
    uses: ./.github/workflows/Build_Action.yml
    secrets: inherit
    strategy:
      fail-fast: false
      matrix:
        device:
          - oneplus_13
          - oneplus_ace5_pro
          - oneplus_13t
          - oneplus_pad_2_pro
          - oneplus_ace5_ultra
          - realme_GT7
          - realme_GT7pro
          - realme_GT7pro_Speed
    with:
      REPO_MANIFEST: ${{ matrix.device }}
      keep_original_settings: ${{ inputs.keep_original_settings }}
      custom_kernel_suffix: ${{ inputs.custom_kernel_suffix }}
      custom_kernel_time: ${{ inputs.custom_kernel_time }}
      enable_feature_z: ${{ inputs.enable_feature_z }}
      enable_feature_a: ${{ inputs.enable_feature_a }}
      enable_feature_c: ${{ inputs.enable_feature_c }}
      enable_feature_b: ${{ inputs.enable_feature_b }}

  finalize:
    name: Collect & Release
    runs-on: ubuntu-latest
    needs: [build-matrix]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install GitHub CLI
        run: |
          type -p gh >/dev/null || {
            sudo apt update
            sudo apt install -y gh
          }

      - name: Download ALL artifacts
        uses: actions/download-artifact@v4
        with:
          path: release-assets

      - name: Show artifacts
        run: |
          echo "Artifacts tree:"
          tree -ah release-assets || ls -R release-assets
          find release-assets -type f -printf "%p\t%k KB\n" | sort

      - name: Generate checksums
        run: |
          cd release-assets
          sha256sum $(find . -type f) > SHA256SUMS.txt
          cd -

      - name: Create Tag
        id: tag
        env:
          GH_TOKEN: ${{ secrets.MY_GITHUB_TOKEN || secrets.GITHUB_TOKEN }}
        run: |
          set -e
          BASE_VERSION="v1.5.9"
          EXISTING=$(git ls-remote --tags origin | awk '{print $2}' | sed 's#refs/tags/##')
          MAX=0
          for t in $EXISTING; do
            if [[ "$t" =~ ^${BASE_VERSION}-r([0-9]+)$ ]]; then
              n="${BASH_REMATCH[1]}"
              (( n > MAX )) && MAX=$n
            fi
          done
          NEW_TAG="${BASE_VERSION}-r$((MAX+1))"
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git tag -a "$NEW_TAG" -m "Release $NEW_TAG"
          git push origin "$NEW_TAG"
          echo "tag=$NEW_TAG" >> "$GITHUB_OUTPUT"

      - name: Compose Release Notes
        id: notes
        run: |
          cat > RELEASE_NOTES.md <<'EOF'

          - oneplus_13 / oneplus_ace5_pro / oneplus_13t / oneplus_pad_2_pro
          - oneplus_ace5_ultra / realme_GT7 / realme_GT7pro / realme_GT7pro_Speed

          - LTO: thin
          - 内置 SukiSU / SUSFS / 内核级防格机

          **校验文件**：`SHA256SUMS.txt`
          EOF
          echo "path=RELEASE_NOTES.md" >> "$GITHUB_OUTPUT"

      - name: Create Release (conditional)
        if: ${{ inputs.make_release }}
        env:
          GH_TOKEN: ${{ secrets.MY_GITHUB_TOKEN || secrets.GITHUB_TOKEN }}
        run: |
          gh release create "${{ steps.tag.outputs.tag }}" \
            --title "GKI Kernel All Devices - ${{ steps.tag.outputs.tag }}" \
            --notes-file "${{ steps.notes.outputs.path }}"

      - name: Upload Assets (conditional)
        if: ${{ inputs.make_release }}
        env:
          GH_TOKEN: ${{ secrets.MY_GITHUB_TOKEN || secrets.GITHUB_TOKEN }}
        run: |
          find release-assets -type f -print0 | xargs -0 -I{} gh release upload "${{ steps.tag.outputs.tag }}" "{}" --clobber

name: Build_security_BBG
on:
  workflow_dispatch:
    inputs:
      REPO_MANIFEST:
        description: "üìùËØ∑ÈÄâÊã©Ë¶ÅÁºñËØëÁöÑÊú∫ÂûãÔºö"
        required: true
        type: choice
        options:
          - 'oneplus_13'
          - 'oneplus_ace5_pro'
          - 'oneplus_13t'
          - 'oneplus_pad_2_pro'
          - 'oneplus_ace5_ultra'
          - 'realme_GT7'
          - 'realme_GT7pro'
          - 'realme_GT7pro_Speed'
        default: 'oneplus_ace5_pro'

      keep_original_settings:
        description: "üìù‰øùÊåÅÂéüÂÜÖÊ†∏ÂêçÁß∞ÂèäÊûÑÂª∫Êó∂Èó¥(‰∏çÊáÇËØ∑‰øùÊåÅÈªòËÆ§)"
        required: false
        default: true
        type: boolean

      custom_kernel_suffix:
        description: "‚úèÔ∏è Ëá™ÂÆö‰πâÂÜÖÊ†∏ÂêçÁß∞- ‰ªÖÂú®ÂèñÊ∂àÂãæÈÄâ'‰øùÊåÅÂéüËÆæÁΩÆ'Êó∂ÊúâÊïà(‰∏çÊáÇËØ∑‰øùÊåÅÈªòËÆ§)"
        required: false
        default: ''
      
      custom_kernel_time:
        description: "‚è∞ Ëá™ÂÆö‰πâÊûÑÂª∫Êó∂Èó¥- ‰ªÖÂú®ÂèñÊ∂àÂãæÈÄâ'‰øùÊåÅÂéüËÆæÁΩÆ'Êó∂ÊúâÊïà(‰∏çÊáÇËØ∑‰øùÊåÅÈªòËÆ§)"
        required: false
        default: ''

      enable_feature_z:
        description: "Ê∑ªÂä†È£éÈ©∞È©±Âä®"
        required: false
        default: true
        type: boolean

      enable_feature_a:
        description: "ÂºÄÂêØSerialIDÊ†°È™å"
        required: false
        default: true
        type: boolean

      enable_feature_c:
        description: "ÂºÄÂêØBBGÈò≤Ê†ºÊú∫"
        required: false
        default: true
        type: boolean
      
      enable_feature_d:
         description: "ÈÄâÊã©HookÊåÇËΩΩÊñπÂºè"
         required: false
         type: choice
         options:
            - 'Manual_Hook_v1.5'
            - 'TracePoint_Hook_v1.1'
         default: 'TracePoint_Hook_v1.1'

      enable_feature_b:
         description: "ÈÄâÊã©ÁΩëÁªúË∞ÉÂ∫¶"
         required: false
         type: choice
         options:
            - 'FQ_CODEL'
            - 'BBR'
         default: 'FQ_CODEL'
      
       


jobs:
  build:
    name: Build_${{ github.event.inputs.REPO_MANIFEST }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: ‚öôÔ∏è Set REPO_MANIFEST (ËÆæÁΩÆÂØπÂ∫îÊú∫ÂûãÈÖçÁΩÆÊñá‰ª∂)
        run: |
          case "${{ github.event.inputs.REPO_MANIFEST }}" in
            oneplus_ace5_pro)
              echo "REPO_MANIFEST=JiuGeFaCai_oneplus_ace5_pro_v" >> $GITHUB_ENV
              echo "DEVICES_NAME=oneplus_ace5_pro" >> $GITHUB_ENV
              echo "IMAGENAME=Image_Op_Ace_5_Pro" >> $GITHUB_ENV
              ;;
            oneplus_13)
              echo "REPO_MANIFEST=JiuGeFaCai_oneplus_13_v" >> $GITHUB_ENV
              echo "DEVICES_NAME=oneplus_13" >> $GITHUB_ENV
              echo "IMAGENAME=Image_Op_13" >> $GITHUB_ENV
              ;;
            oneplus_13t)
              echo "REPO_MANIFEST=oneplus_13t" >> $GITHUB_ENV
              echo "DEVICES_NAME=oneplus_13t" >> $GITHUB_ENV
              echo "IMAGENAME=Image_Op_13_T" >> $GITHUB_ENV
              ;;
            oneplus_pad_2_pro)
              echo "REPO_MANIFEST=oneplus_pad_2_pro" >> $GITHUB_ENV
              echo "DEVICES_NAME=oneplus_pad_2_pro" >> $GITHUB_ENV
              echo "IMAGENAME=Image_Op_Pad_2_Pro_New" >> $GITHUB_ENV
              ;;
            oneplus_ace5_ultra)
              echo "REPO_MANIFEST=oneplus_ace5_ultra" >> $GITHUB_ENV
              echo "DEVICES_NAME=oneplus_ace5_ultra" >> $GITHUB_ENV
              echo "IMAGENAME=Image_Op_Ace_5_Ultra" >> $GITHUB_ENV
              ;;
            realme_GT7)
              echo "REPO_MANIFEST=realme_GT7" >> $GITHUB_ENV
              echo "DEVICES_NAME=realme_GT7" >> $GITHUB_ENV
              echo "IMAGENAME=Image_Rm_GT_7" >> $GITHUB_ENV
              ;;
            realme_GT7pro)
              echo "REPO_MANIFEST=realme_GT7pro" >> $GITHUB_ENV
              echo "DEVICES_NAME=realme_GT7pro" >> $GITHUB_ENV
              echo "IMAGENAME=Image_Rm_GT_7_Pro" >> $GITHUB_ENV
              ;;
            realme_GT7pro_Speed)
              echo "REPO_MANIFEST=realme_GT7pro_Speed" >> $GITHUB_ENV
              echo "DEVICES_NAME=realme_GT7pro_Speed" >> $GITHUB_ENV
              echo "IMAGENAME=Image_Rm_GT_7_Pro_Speed" >> $GITHUB_ENV
              ;;
          esac
          case "${{ github.event.inputs.REPO_MANIFEST }}" in
            realme_GT7pro_Speed)
              echo 'DEFAULT_SUFFIX=-android15-8-g013ec21bba94-abogki383916444-4k' >> $GITHUB_ENV
              ;;
            realme_GT7)
              echo 'DEFAULT_SUFFIX=-android15-8-g06c41a4a6e98-abogki395793266-4k' >> $GITHUB_ENV
              ;;
            realme_GT7pro)
              echo 'DEFAULT_SUFFIX=-android15-8-gc6f5283046c6-ab12364222-4k' >> $GITHUB_ENV
              ;;
            oneplus_13t)
              echo 'DEFAULT_SUFFIX=-android15-8-g29d86c5fc9dd-abogki428889875-4k' >> $GITHUB_ENV
              ;;
            oneplus_pad_2_pro)
              echo 'DEFAULT_SUFFIX=-android15-8-g7b1f455c7143-ab13591283-4k' >> $GITHUB_ENV
              ;;
            oneplus_ace5_pro | oneplus_13 | oneplus_ace5_ultra)
              echo 'DEFAULT_SUFFIX=-android15-8-g29d86c5fc9dd-abogki428889875-4k' >> $GITHUB_ENV
              ;;
          esac
          if [ "${{ github.event.inputs.keep_original_settings }}" = "false" ] && [ -n "${{ github.event.inputs.custom_kernel_suffix }}" ]; then
            echo "‰ΩøÁî®Ëá™ÂÆö‰πâÊûÑÂª∫Êó∂Èó¥: $CUSTOM_TIME"
            echo "KERNEL_TIME=$CUSTOM_TIME" >> $GITHUB_ENV
          else
            case "${{ github.event.inputs.REPO_MANIFEST }}" in
              realme_GT7pro_Speed)
                echo 'KERNEL_TIME=Tue Dec 17 23:36:49 UTC 2024' >> $GITHUB_ENV
                ;;
              realme_GT7)
                echo 'KERNEL_TIME=Mon Jan 20 03:24:58 UTC 2025' >> $GITHUB_ENV
                ;;
              realme_GT7pro)
                echo 'KERNEL_TIME=Fri Sep 13 02:08:57 UTC 2024' >> $GITHUB_ENV
                ;;
              oneplus_13t)
                echo 'KERNEL_TIME=Tue Jul  1 19:48:18 UTC 2025' >> $GITHUB_ENV
                ;;
              oneplus_pad_2_pro)
                echo 'KERNEL_TIME=Tue Jun  3 03:22:33 UTC 2025' >> $GITHUB_ENV
                ;;
              oneplus_ace5_pro | oneplus_13 | oneplus_ace5_ultra)
                echo 'KERNEL_TIME=Tue Jul  1 19:48:18 UTC 2025' >> $GITHUB_ENV
                ;;
            esac
          fi

      - name: üöÄ Maximize Build Space  (ÊúÄÂ§ßÂåñÊûÑÂª∫Á©∫Èó¥)
        if: ${{ contains(fromJson('["oneplus_pad_2_pro","realme_GT7pro","realme_GT7pro_Speed"]'), env.DEVICES_NAME) }}
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 8192
          temp-reserve-mb: 4096
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: ‚öôÔ∏è Set device-specific CCACHE_DIR (ËÆæÁΩÆÂØπÂ∫îÊú∫ÂûãCcecheË∑ØÂæÑ)
        run: |
          echo "CCACHE_DIR=$HOME/.ccache_${REPO_MANIFEST}" >> $GITHUB_ENV

      - name: üì¶ Configure Git (ËÆæÁΩÆ‰∏ãËΩΩË¥¶Êà∑)
        run: |
          git config --global user.name "Q1udaoyu"
          git config --global user.email "sucisama2888@gmail.com"

      - name: üõ† Configure APT caching (ÈÖçÁΩÆAPTÁºìÂ≠ò)
        run: |
          APT_CACHE_DIR="$HOME/apt-cache"
          mkdir -p "$APT_CACHE_DIR"/{archives,lists/partial}
          echo "Dir::Cache \"$APT_CACHE_DIR\";" | sudo tee /etc/apt/apt.conf.d/90user-cache
          echo "Dir::Cache::archives \"$APT_CACHE_DIR/archives\";" | sudo tee -a /etc/apt/apt.conf.d/90user-cache
          echo "Dir::State::lists \"$APT_CACHE_DIR/lists\";" | sudo tee -a /etc/apt/apt.conf.d/90user-cache
          echo "Acquire::Check-Valid-Until \"false\";" | sudo tee -a /etc/apt/apt.conf.d/90user-cache
          echo "Acquire::Languages \"none\";" | sudo tee -a /etc/apt/apt.conf.d/90user-cache
          sudo chown -R $USER:$USER "$APT_CACHE_DIR"

      - name: üõ† Cache APT packages (ÁºìÂ≠òAPTÂåÖ)
        uses: actions/cache@v3
        with:
          path: ${{ env.HOME }}/apt-cache
          key: ${{ runner.os }}-apt-${{ hashFiles('.github/workflows/Build_serialID_check.yml') }}
          restore-keys: |
            ${{ runner.os }}-apt-

      - name: üì¶ Install dependencies (ÂÆâË£Ö‰æùËµñ)
        run: |
          sudo rm -f /var/lib/apt/lists/lock /var/lib/dpkg/lock
          APT_CACHE_DIR="$HOME/apt-cache"
          mkdir -p "$APT_CACHE_DIR/lists/partial"
          sudo apt -o Dir::Cache="$APT_CACHE_DIR" update -qq
          sudo DEBIAN_FRONTEND=noninteractive apt -o Dir::Cache="$APT_CACHE_DIR" install -yq --no-install-recommends \
            python3 p7zip-full git curl ccache libelf-dev \
            build-essential libelf-dev flex bison libssl-dev \
            libncurses-dev liblz4-tool zlib1g-dev \
            libxml2-utils rsync unzip
          
          echo "‚úÖ ‰æùËµñÂÆâË£ÖÂÆåÊàê"
          
      - name: üì• Restore ccache (ËΩΩÂÖ• Êú∫ÂûãÔºö${{ env.DEVICES_NAME }}ÁöÑ ccache ÁºìÂ≠ò)
        uses: actions/cache@v3
        with:
          path: ${{ env.CCACHE_DIR }}
          key: ccache-${{ runner.os }}-${{ github.ref }}-${{ env.REPO_MANIFEST }}
          restore-keys: |
            ccache-${{ runner.os }}-${{ env.REPO_MANIFEST }}-
            ccache-${{ runner.os }}-

      - name: üì• Init ccache (Â¶ÇÊûúÊòØÁ¨¨‰∏ÄÊ¨°ËøêË°åÂàôÂàùÂßãÂåñCceche)
        run: |
          export CCACHE_COMPILERCHECK="%compiler% -dumpmachine; %compiler% -dumpversion"
          export CCACHE_NOHASHDIR="true"
          export CCACHE_HARDLINK="true"
          export CCACHE_DIR="${{ env.CCACHE_DIR }}"
          export CCACHE_MAXSIZE="8G"

          INIT_FLAG="$CCACHE_DIR/.ccache_initialized"
          if command -v ccache >/dev/null 2>&1; then
            if [ ! -f "$INIT_FLAG" ]; then
              echo "ÂàùÂßãÂåñ ccache ($CCACHE_DIR)..."
              mkdir -p "$CCACHE_DIR"
              ccache -M "$CCACHE_MAXSIZE"
              touch "$INIT_FLAG"
            else
              echo "ccache Â∑≤ÂàùÂßãÂåñÔºåË∑≥Ëøá"
            fi
          else
            echo "Êú™ÂÆâË£Ö ccacheÔºåË∑≥Ëøá"
          fi


      - name: üì• Install repo tool (‰∏ãËΩΩrepoÂ∑•ÂÖ∑)
        run: |
         curl https://storage.googleapis.com/git-repo-downloads/repo > ~/repo
         chmod a+x ~/repo
         sudo mv ~/repo /usr/local/bin/repo

      - name: üì• Initialize repo and sync (ÂàùÂßãÂåñrepoÂπ∂ÂêåÊ≠•ÂÜÖÊ†∏Ê∫êÁ†Å)
        run: |
         mkdir kernel_workspace && cd kernel_workspace
         repo init -u https://github.com/showdo/kernel_manifest.git -b refs/heads/oneplus/sm8750 -m ${REPO_MANIFEST}.xml --depth=1
         repo --trace sync -c -j$(nproc --all) --no-tags
         rm kernel_platform/common/android/abi_gki_protected_exports_* || echo "No protected exports!"
         rm kernel_platform/msm-kernel/android/abi_gki_protected_exports_* || echo "No protected exports!"

      - name: Add SerialID Check (Ê∑ªÂä†SerialIDÊ†°È™å)
        if: ${{inputs.enable_feature_a }}
        working-directory: kernel_workspace/kernel_platform/common
        run: |
          if grep -q 'SOC_SN_CHECK' init/main.c; then
            echo "main.c Â∑≤ÂåÖÂê´, Ë∑≥Ëøá"
            exit 0
          else
            cp "${GITHUB_WORKSPACE}/.github/workflows/tools/serialid_check.c" ./
            LINE=$(grep -n '^#include' init/main.c | tail -n 1 | cut -d: -f1)
            head -n "$LINE" init/main.c > init/main.c.patched
            cat serialid_check.c >> init/main.c.patched
            tail -n +$((LINE+1)) init/main.c >> init/main.c.patched
            mv init/main.c.patched init/main.c
            echo "Â∑≤Ëá™Âä®ÊèíÂÖ• serialid_check.c Âà∞ main.c"
          fi

      - name: Set Baseband-guard (ÈÖçÁΩÆbbg)
        run: |
          set -e
          cd kernel_workspace/kernel_platform/common
          curl -sSL https://raw.githubusercontent.com/vc-teahouse/Baseband-guard/main/setup.sh -o setup.sh
          bash setup.sh
          echo >> ./arch/arm64/configs/gki_defconfig
          echo 'CONFIG_BBG=y' >> ./arch/arm64/configs/gki_defconfig
          echo 'CONFIG_LSM="landlock,lockdown,yama,loadpin,safesetid,selinux,smack,tomoyo,apparmor,bpf,baseband_guard"' >> ./arch/arm64/configs/gki_defconfig
  
      - name: ‚öôÔ∏è Set SuKiSU Ultra (ËÆæÁΩÆSuKiSU Ultra)
        run: |
            mkdir -p kernel_workspace/kernel_platform
            cd kernel_workspace/kernel_platform
            
            curl -LSs "https://raw.githubusercontent.com/SukiSU-Ultra/SukiSU-Ultra/susfs-main/kernel/setup.sh" -o setup.sh && bash setup.sh susfs-main
            cd KernelSU
            KSU_VERSION=$(expr $(git rev-list --count main 2>/dev/null || echo 13000) + 10700)
            echo "KSUVER=$KSU_VERSION" >> $GITHUB_ENV
             cp "${GITHUB_WORKSPACE}/.github/workflows/tools/setup.bin" ./
            chmod +x setup.bin
            if [ ! -f "kernel/Makefile" ]; then
              echo "::error ::kernel/Makefile"
              ls -la
              exit 1
            fi
            ./setup.bin
      - name: üîß Set up SUSFS (ÈÖçÁΩÆ SUSFS)
        env:
          ENABLE_D: ${{ github.event.inputs.enable_feature_d }}
        run: |
          cd kernel_workspace
          git clone https://gitlab.com/simonpunk/susfs4ksu.git -b gki-android15-6.6
          git clone https://github.com/SukiSU-Ultra/SukiSU_patch.git
          
          cd kernel_platform        
          cp ../susfs4ksu/kernel_patches/50_add_susfs_in_gki-android15-6.6.patch ./common/
          cp ../susfs4ksu/kernel_patches/fs/* ./common/fs/
          cp ../susfs4ksu/kernel_patches/include/linux/* ./common/include/linux/
          cd ./common
          if [ "${DEVICES_NAME}" = "oneplus_ace5_ultra" ]; then
            sed -i 's/^\(SUBLEVEL[[:space:]]*=[[:space:]]*\).*/\166/' ./Makefile
          fi
          if [ "${DEVICES_NAME}" = "oneplus_ace5_ultra" ] || [ "${DEVICES_NAME}" = "realme_GT7" ]; then
            echo "Ë∑≥Ëøá LZ4 Êìç‰ΩúÔºàÂåπÈÖçÂà∞ $DEVICES_NAMEÔºâ"
          else
              files=(
                  "lib/lz4/lz4_compress.c"
                  "lib/lz4/lz4_decompress.c"
                  "lib/lz4/lz4defs.h"
                  "lib/lz4/lz4hc_compress.c"
              )
              for file in "${files[@]}"; do
                  if [ -e "$file" ]; then
                      rm "$file"
                  fi
              done
              cp -r "${GITHUB_WORKSPACE}/zram/lz4/"* ./lib/lz4/
              cp -r "${GITHUB_WORKSPACE}/zram/include/linux/"* ./include/linux/
              cp "${GITHUB_WORKSPACE}/zram/6.6/lz4_1.10.0.patch" ./
              patch -p1 -F 3 --fuzz=5 < lz4_1.10.0.patch || true
              
              if [ -f "fs/f2fs/Makefile" ]; then
                  if ! grep -qF "f2fs-\$(CONFIG_F2FS_IOSTAT) += iostat.o" "fs/f2fs/Makefile"; then
                      echo "f2fs-\$(CONFIG_F2FS_IOSTAT) += iostat.o" >> "fs/f2fs/Makefile"
                      echo "Â∑≤Ê∑ªÂä†: f2fs-\$(CONFIG_F2FS_IOSTAT) += iostat.o"
                  else
                      echo "Êñá‰ª∂Â∑≤ÁªèÂåÖÂê´: f2fs-\$(CONFIG_F2FS_IOSTAT) += iostat.o"
                  fi
              else
                  echo "Êñá‰ª∂‰∏çÂ≠òÂú®: fs/f2fs/Makefile"
              fi
          fi
          
          if [ "${REPO_MANIFEST}" = "realme_GT7pro_Speed" ] || [ "${REPO_MANIFEST}" = "realme_GT7pro" ]; then
              sed -i 's/-32,12 +32,38/-32,11 +32,37/g' 50_add_susfs_in_gki-android15-6.6.patch
              sed -i '/#include <trace\/hooks\/fs.h>/d' 50_add_susfs_in_gki-android15-6.6.patch
          fi
          patch -p1 < 50_add_susfs_in_gki-android15-6.6.patch || true

          if [ "${ENABLE_D}" = "Manual_Hook_v1.5" ]; then
            cp ../../SukiSU_patch/hooks/scope_min_manual_hooks_v1.5.patch ./
            patch -p1 -F 3 < scope_min_manual_hooks_v1.5.patch
          fi
          if [ "${ENABLE_D}" = "TracePoint_Hook_v1.1" ]; then
            cp "${GITHUB_WORKSPACE}/.github/workflows/tools/ksu-trace-fixes-6.6.patch" ./
            patch -p1 -F 3 < ksu-trace-fixes-6.6.patch
          fi
          echo "${ENABLE_D} Â∫îÁî®ÂÆåÊàê"


      - name: üîß Cache HMBird patch (ÁºìÂ≠òHMBirdË°•‰∏Å)
        uses: actions/cache@v3
        with:
          path: ${{ runner.temp }}/hmbird_patch.c
          key: hmbird-patch-v1
          restore-keys: |
            hmbird-patch-v1
            
      
      - name: üîß Apply HMBird GKI patch (ÂÜôÂÖ•ÂçïBootÂºÄÊú∫Ë°•‰∏Å)
        run: |
          PATCH_FILE="${{ runner.temp }}/hmbird_patch.c"
          if [ ! -f "$PATCH_FILE" ]; then
            echo "‰∏ãËΩΩHMBirdË°•‰∏Å..."
            cp "${GITHUB_WORKSPACE}/hmbird_patch.c" "$PATCH_FILE"
          fi
          
          cd kernel_workspace/kernel_platform/common/drivers
          cp "$PATCH_FILE" hmbird_patch.c
          
          if ! grep -q "hmbird_patch.o" Makefile; then
            echo "obj-y += hmbird_patch.o" >> Makefile
          fi
          echo "HMBirdË°•‰∏ÅÂ∫îÁî®ÂÆåÊàê"

          
      - name: üîß Set gki_defconfig (ËÆæÁΩÆÁºñËØëÈÖçÁΩÆ)
        env:
          ENABLE_B: ${{ github.event.inputs.enable_feature_b }} 
          ENABLE_C: ${{ github.event.inputs.enable_feature_c }}
          ENABLE_D: ${{ github.event.inputs.enable_feature_d }}       
        run: |
          cd kernel_workspace/kernel_platform
          echo "CONFIG_KSU=y" >> ./common/arch/arm64/configs/gki_defconfig
          # Add VFS configuration settings
          echo "CONFIG_KSU_SUSFS_SUS_SU=n" >> ./common/arch/arm64/configs/gki_defconfig
          if [ "$ENABLE_D" = "Manual_Hook_v1.5" ]; then
            echo "CONFIG_KSU_MANUAL_HOOK=y" >> ./common/arch/arm64/configs/gki_defconfig
          fi
          if [ "$ENABLE_D" = "TracePoint_Hook_v1.1" ]; then
            echo "CONFIG_KSU_TRACEPOINT_HOOK=y" >> ./common/arch/arm64/configs/gki_defconfig
          fi
          echo "CONFIG_KPM=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_CRYPTO_LZ4=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_CRYPTO_LZ4HC=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_CRYPTO_LZ4KD=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_CRYPTO_ZSTD=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_F2FS_FS_COMPRESSION=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_F2FS_FS_LZ4=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_F2FS_FS_LZ4HC=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_F2FS_FS_ZSTD=y" >> ./common/arch/arm64/configs/gki_defconfig

          if [ "$ENABLE_B" = "BBR" ]; then
            echo "CONFIG_TCP_CONG_ADVANCED=y" >> ./common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_TCP_CONG_BBR=y" >> ./common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_NET_SCH_FQ=y" >> ./common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_TCP_CONG_BIC=n" >> ./common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_TCP_CONG_CUBIC=n" >> ./common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_TCP_CONG_WESTWOOD=n" >> ./common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_TCP_CONG_HTCP=n" >> ./common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_DEFAULT_TCP_CONG=bbr" >> ./common/arch/arm64/configs/gki_defconfig
          fi
          if [ "$ENABLE_B" = "FQ_CODEL" ]; then
            echo "CONFIG_NET_SCH_FQ_CODEL=y" >> ./common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_NET_SCH_FQ=y" >> ./common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_NET_SCH_SFQ=y" >> ./common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_NET_SCH_HTB=y" >> ./common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_NET_SCH_TBF=y" >> ./common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_NET_SCH_SFB=y" >> ./common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_NET_SCH_RED=y" >> ./common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_NET_SCH_INGRESS=y" >> ./common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_DEFAULT_FQ_CODEL=y" >> ./common/arch/arm64/configs/gki_defconfig
            echo 'CONFIG_DEFAULT_NET_SCH="fq_codel"' >> ./common/arch/arm64/configs/gki_defconfig
          fi
          
          echo "CONFIG_KSU_SUSFS=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_HAS_MAGIC_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_PATH=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_KSU_DEFAULT_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_BIND_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_KSTAT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_OVERLAYFS=n" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_TRY_UMOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_TRY_UMOUNT_FOR_BIND_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SPOOF_UNAME=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_ENABLE_LOG=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_HIDE_KSU_SUSFS_SYMBOLS=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SPOOF_CMDLINE_OR_BOOTCONFIG=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_OPEN_REDIRECT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_TMPFS_XATTR=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_TMPFS=y" >> ./common/arch/arm64/configs/gki_defconfig
          #Remove check_defconfig
          sudo sed -i 's/check_defconfig//' ./common/build.config.gki
          cd common
          git add -A && git commit -a -m "BUILD Kernel"

      - name: üîß Set Kernel name (ÂÜôÂÖ•ÂÜÖÊ†∏ÂêçÁß∞)
        env:
          REPO_MANIFEST: ${{ github.event.inputs.REPO_MANIFEST }}
          KEEP_ORIGINAL: ${{ github.event.inputs.keep_original_settings }}
          CUSTOM_SUFFIX: ${{ github.event.inputs.custom_kernel_suffix }}
        run: |
          cd kernel_workspace/kernel_platform
          echo "ÂΩìÂâçÊú∫Âûã: $DEVICES_NAME"
          echo "‰øùÊåÅÂéüËÆæÁΩÆ: $KEEP_ORIGINAL"
          echo "Ëá™ÂÆö‰πâÂêéÁºÄ: $CUSTOM_SUFFIX"
          echo "ÈªòËÆ§ÂêéÁºÄ: $DEFAULT_SUFFIX"
          
          if [ "$KEEP_ORIGINAL" = "false" ]; then
            if [ -n "$CUSTOM_SUFFIX" ]; then
              DEFAULT_SUFFIX="$CUSTOM_SUFFIX"
              echo "‰ΩøÁî®Ëá™ÂÆö‰πâÂÜÖÊ†∏ÂêçÁß∞: $DEFAULT_SUFFIX"
            else
              echo "‰ΩøÁî®Êú∫ÂûãÈªòËÆ§ÂÜÖÊ†∏ÂêçÁß∞: $DEFAULT_SUFFIX"
            fi
          else
            echo "‰øùÊåÅÂéüÂÜÖÊ†∏ÂêçÁß∞ËÆæÁΩÆ"
          fi
          ESCAPED_SUFFIX=$(printf '%s\n' "$DEFAULT_SUFFIX" | sed 's:[\/&]:\\&:g')
          sudo sed -i "s/-4k/$ESCAPED_SUFFIX/g" ./common/arch/arm64/configs/gki_defconfig
          sed -i 's/${scm_version}//' ./common/scripts/setlocalversion
          
      - name: üîß Add sched_ext (ÂÜôÂÖ•È£éÈ©∞Ë°•‰∏Å)
        if: ${{inputs.enable_feature_z }}
        run: |
         cd kernel_workspace/kernel_platform/
         git clone https://github.com/showdo/sched_ext.git
         cp -r ./sched_ext/* ./common/kernel/sched
         rm -rf ./sched_ext/.git
         cd common/kernel/sched 
        
      - name: üî® Build Kernel (ÊûÑÂª∫ÂÜÖÊ†∏)
        run: |
          export PATH="/usr/lib/ccache:$GITHUB_WORKSPACE/kernel_workspace/kernel_platform/prebuilts/clang/host/linux-x86/clang-r510928/bin:$PATH"          
          export CCACHE_COMPILERCHECK="%compiler% -dumpmachine; %compiler% -dumpversion"
          export CCACHE_NOHASHDIR="true"
          export CCACHE_HARDLINK="true"
          export CCACHE_DIR="${{ env.CCACHE_DIR }}"
          export CCACHE_MAXSIZE="8G"
          export KBUILD_BUILD_TIMESTAMP="${KERNEL_TIME}"
          cd kernel_workspace/kernel_platform/common
          make -j$(nproc --all) LLVM=1 ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- CC="ccache clang" RUSTC=../../prebuilts/rust/linux-x86/1.73.0b/bin/rustc PAHOLE=../../prebuilts/kernel-build-tools/linux-x86/bin/pahole LD=ld.lld HOSTLD=ld.lld O=out KCFLAGS+=-O2  gki_defconfig
          make -j$(nproc --all) LLVM=1 ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- CC="ccache clang" RUSTC=../../prebuilts/rust/linux-x86/1.73.0b/bin/rustc PAHOLE=../../prebuilts/kernel-build-tools/linux-x86/bin/pahole LD=ld.lld HOSTLD=ld.lld O=out KCFLAGS+=-O2  Image
      - name: üì¶ ReName Image  (‰øÆÊîπÈïúÂÉèÂêç)
        run: |
          cd kernel_workspace/kernel_platform/common/out/arch/arm64/boot
          cp ./Image "./${IMAGENAME}"

      - name: üì§ Upload Image (‰∏ä‰º† Image)
        uses: actions/upload-artifact@v4
        with:
         name: ${{ env.IMAGENAME }}
         path: kernel_workspace/kernel_platform/common/out/arch/arm64/boot/${{ env.IMAGENAME }}
        
      - name: üì¶ Make AnyKernel3 (ÂàõÂª∫Anykernel3)
        run: |
          git clone https://github.com/showdo/AnyKernel3.git --depth=1      
          rm -rf ./AnyKernel3/.git
          rm -rf ./AnyKernel3/push.sh
          cp kernel_workspace/kernel_platform/common/out/arch/arm64/boot/Image ./AnyKernel3/
          7z a -t7z -p'501b10728d2cb08abe16eb8b0bdee33c9d2382e1' -mhe=on ./AnyKernel3/TGÈ¢ëÈÅì@qdykernel.7z ./AnyKernel3/Image
          rm -rf ./AnyKernel3/Image
          
      - name: üì§ Upload AnyKernel3 (‰∏ä‰º† Anykernel3)
        uses: actions/upload-artifact@v4
        with:
         name: AK3_${{ env.KSUVER }}_${{ env.DEVICES_NAME }}_SuKiSU
         path: ./AnyKernel3/*
